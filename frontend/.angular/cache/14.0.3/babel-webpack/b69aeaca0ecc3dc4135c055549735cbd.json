{"ast":null,"code":"import _classCallCheck from \"C:/Users/SAMUEL/Desktop/UdacityProjects/theCoffee_shopApp/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/SAMUEL/Desktop/UdacityProjects/theCoffee_shopApp/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nvar JWTS_LOCAL_KEY = 'JWTS_LOCAL_KEY';\nvar JWTS_ACTIVE_INDEX_KEY = 'JWTS_ACTIVE_INDEX_KEY';\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService() {\n      _classCallCheck(this, AuthService);\n\n      this.url = environment.auth0.url;\n      this.audience = environment.auth0.audience;\n      this.clientId = environment.auth0.clientId;\n      this.callbackURL = environment.auth0.callbackURL;\n    }\n\n    _createClass(AuthService, [{\n      key: \"build_login_link\",\n      value: function build_login_link() {\n        var callbackPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var link = 'https://';\n        link += this.url + '.auth0.com';\n        link += '/authorize?';\n        link += 'audience=' + this.audience + '&';\n        link += 'response_type=token&';\n        link += 'client_id=' + this.clientId + '&';\n        link += 'redirect_uri=' + this.callbackURL + callbackPath;\n        return link;\n      } // invoked in app.component on load\n\n    }, {\n      key: \"check_token_fragment\",\n      value: function check_token_fragment() {\n        // parse the fragment\n        var fragment = window.location.hash.substr(1).split('&')[0].split('='); // check if the fragment includes the access token\n\n        if (fragment[0] === 'access_token') {\n          // add the access token to the jwt\n          this.token = fragment[1]; // save jwts to localstore\n\n          this.set_jwt();\n        }\n      }\n    }, {\n      key: \"set_jwt\",\n      value: function set_jwt() {\n        localStorage.setItem(JWTS_LOCAL_KEY, this.token);\n\n        if (this.token) {\n          this.decodeJWT(this.token);\n        }\n      }\n    }, {\n      key: \"load_jwts\",\n      value: function load_jwts() {\n        this.token = localStorage.getItem(JWTS_LOCAL_KEY) || null;\n\n        if (this.token) {\n          this.decodeJWT(this.token);\n        }\n      }\n    }, {\n      key: \"activeJWT\",\n      value: function activeJWT() {\n        return this.token;\n      }\n    }, {\n      key: \"decodeJWT\",\n      value: function decodeJWT(token) {\n        var jwtservice = new JwtHelperService();\n        this.payload = jwtservice.decodeToken(token);\n        return this.payload;\n      }\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        this.token = '';\n        this.payload = null;\n        this.set_jwt();\n      }\n    }, {\n      key: \"can\",\n      value: function can(permission) {\n        return this.payload && this.payload.permissions && this.payload.permissions.length && this.payload.permissions.indexOf(permission) >= 0;\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}